name: Scheduled Production browser tests
on:
  schedule:
    # Every hour from 7 - 24 (finnish time winter time)
    - cron: '0 5-22 * * *'
#  uncomment the following if you want to develop this workflow in your own branch
#  push:
#    branches:
#      - TH-1047-scheduled-browser-tests
jobs:
  production-tests:
    name: Scheduled Acceptance tests against Produdction environment
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      # Run latest master for now
      # to checkout latest tag we need to fetch unshallow clone
      #  with:
      #    fetch-depth: 0
      # checkout latest tag (should be a production version)
      # - run: git describe --abbrev=0 --tags | xargs git checkout
      - name: Setup Node.js environment
        uses: actions/setup-node@v2.1.2
        with:
          node-version: '12'
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"
      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install dependencies
        run: yarn --prefer-offline --frozen-lockfile --check-files --production=false
      - name: Run Acceptance Tests (TestCafe Browser Tests)
        id: testcafe
        run: yarn browser-test:ci
        env:
          BROWSER_TESTS_LOCAL_ENV_URL: https://${{ secrets.ENVIRONMENT_URL_STABLE }}
          REACT_APP_GRAPHQL_BASE_URL: https://tapahtumat-proxy.prod.kuva.hel.ninja/proxy/graphql
          GITHUB_WORKFLOW_NAME: ${{ github.workflow }}
          GITHUB_WORKFLOW_URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          TESTCAFE_SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          TESTCAFE_SLACK_CHANNEL: "#pomodori-alerts"
          TESTCAFE_SLACK_USERNAME: TestCafé
      - name: Upload TestCafe results
        run: |
          zip -r report.zip report/ > no_output 2>&1
          curl -s -H "Content-Type: application/zip" -H "Authorization: Bearer ${{ secrets.NETLIFY_AUTH_TOKEN }}" --data-binary "@report.zip" https://api.netlify.com/api/v1/sites > response.json
          echo "REPORT_URL=$(cat response.json|python -c "import sys, json; print('https://' + json.load(sys.stdin)['subdomain'] + '.netlify.com')")" >> $GITHUB_ENV
        if: always() && steps.testcafe.outcome == 'failure'
      - name: link screenshots url to slack
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_COLOR: ${{ job.status }}
          SLACK_USERNAME: TestCafé
          SLACK_TITLE: ${{ github.workflow }} have *FAILED*!
          SLACK_MESSAGE: "*Check the testcafe report here: ${{env.REPORT_URL}}*"
          SLACK_CHANNEL: pomodori-alerts
          MSG_MINIMAL: true
        if: always() && steps.testcafe.outcome == 'failure'
      - name: Upload screenshots and videos of failed tests to artifact
        uses: actions/upload-artifact@v2
        with:
          name: report
          path: report/
        if: always() && steps.testcafe.outcome == 'failure'