name: Build & Review & Acceptance Tests
on: [pull_request]

env:
  CONTAINER_REGISTRY: ghcr.io
  CONTAINER_REGISTRY_USER: ${{ secrets.GHCR_CONTAINER_REGISTRY_USER }}
  CONTAINER_REGISTRY_PASSWORD: ${{ secrets.GHCR_TOKEN }}
  CONTAINER_REGISTRY_REPO: ghcr.io/city-of-helsinki/${{ github.event.repository.name }}
  REPO_NAME: ${{ github.event.repository.name }}
  KUBECONFIG_RAW: ${{ secrets.KUBECONFIG_RAW }}
  BUILD_ARTIFACT_FOLDER: 'build_artifacts'
  SERVICE_ARTIFACT_FOLDER: 'service_artifacts'
  BASE_DOMAIN: ${{ secrets.BASE_DOMAIN_STAGING }}
  SERVICE_PORT: 3001
  K8S_REQUEST_CPU: 60m
  K8S_REQUEST_RAM: 150Mi
  K8S_LIMIT_CPU: 100m
  K8S_LIMIT_RAM: 200Mi
  REACT_APP_GRAPHQL_BASE_URL: 'https://tapahtumat-proxy.test.kuva.hel.ninja/proxy/graphql'

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        service: ['1']
        include:
          - service: '1'
            version: '1.0'
    runs-on: ubuntu-latest
    name: Build
    steps:
      - uses: actions/checkout@v2
      - name: Build
        uses: andersinno/kolga-build-action@v2
        env:
          DOCKER_IMAGE_NAME: ${{ env.REPO_NAME }}-review-${{ matrix.service }}
          DOCKER_BUILD_ARG_SASS_PATH: './src/assets/styles'
          DOCKER_BUILD_ARG_REACT_APP_GRAPHQL_BASE_URL: ${{ env.REACT_APP_GRAPHQL_BASE_URL }}
          DOCKER_BUILD_ARG_REACT_APP_SENTRY_DSN: ${{ secrets.GH_SENTRY_DSN }}
          DOCKER_BUILD_ARG_REACT_APP_SENTRY_ENVIRONMENT: 'dev'
          DOCKER_BUILD_ARG_REACT_APP_CMS_URL: 'https://cms.test.kuva.hel.ninja/api'
          DOCKER_BUILD_ARG_REACT_APP_LINKED_EVENTS_URL: 'https://api.hel.fi/linkedevents/v1'
          DOCKER_BUILD_ARG_REACT_APP_IMAGE_PROXY_URL: 'https://images.weserv.nl/?w=1024&url='
          DOCKER_BUILD_ARG_REACT_APP_GENERATE_SITEMAP: 'false'
          DOCKER_BUILD_ARG_REACT_APP_MATOMO_URL_BASE: 'https://analytics.hel.ninja/'
          DOCKER_BUILD_ARG_REACT_APP_MATOMO_SITE_ID: 64
          DOCKER_BUILD_ARG_REACT_APP_MATOMO_ENABLED: 'false'
          # Feature flags
          DOCKER_BUILD_ARG_REACT_APP_SHOW_SIMILAR_EVENTS: 'false'
          DOCKER_BUILD_ARG_REACT_APP_SHOW_SIMILAR_COURSES: 'false'
  review:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      fail-fast: false
      matrix:
        service: ['1']
        include:
          - service: '1'
            version: '1.0'
            description: 'The Old version of Tapahtumat (without courses)'
    name: Review + Acceptance Tests V${{ matrix.version }}
    steps:
      - uses: actions/checkout@v2
      - uses: andersinno/kolga-setup-action@v2
      - name: Deploy
        uses: andersinno/kolga-deploy-action@v2
        env:
          ENVIRONMENT_URL: https://${{env.K8S_NAMESPACE}}-${{ matrix.service }}.${{ env.BASE_DOMAIN }}
          DOCKER_IMAGE_NAME: ${{ env.REPO_NAME }}-review-${{ matrix.service }}
          PROJECT_NAME: ${{ matrix.service }}
      - name: Setup kubectl
        run: |
          echo "${{ env.KUBECONFIG_RAW }}" > $(pwd)/kubeconfig
          echo "KUBECONFIG=$(pwd)/kubeconfig" >> $GITHUB_ENV
        shell: bash
      - name: Get Review Deploy URL for version ${{ matrix.version }}
        id: deploy-url
        run: |
          DEPLOY_URL=$(kubectl get ingress "${{ env.ENVIRONMENT_SLUG }}-${{ matrix.service }}-ingress" -n ${{env.K8S_NAMESPACE}} -o jsonpath='{.spec.rules[0].host}')
          echo "BROWSER_TESTS_LOCAL_ENV_URL=https://$DEPLOY_URL" >> $GITHUB_ENV
        shell: bash
      - name: Create PR comment for version V${{ matrix.version }}
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          header: deployment-${{ matrix.service }}
          message: |
            **${{ matrix.description }} is deployed to: ${{ env.BROWSER_TESTS_LOCAL_ENV_URL }}** :rocket::rocket::rocket:
      - name: Setup Node.js environment
        uses: actions/setup-node@v2.1.2
        with:
          node-version: '12'
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"
      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install dependencies
        run: yarn --prefer-offline --frozen-lockfile --check-files
      - name: Run Acceptance Tests for V${{ matrix.version }}
        id: testcafe
        run: yarn browser-test:ci
        env:
          GITHUB_WORKFLOW_NAME: ${{  github.workflow }}
          GITHUB_WORKFLOW_URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
      - name: Upload Acceptance Test results for V${{ matrix.version }}
        run: |
          zip -r report.zip report/ > no_output 2>&1
          curl -s -H "Content-Type: application/zip" -H "Authorization: Bearer ${{ secrets.NETLIFY_AUTH_TOKEN }}" --data-binary "@report.zip" https://api.netlify.com/api/v1/sites > response.json
          echo "REPORT_URL=$(cat response.json|python -c "import sys, json; print('https://' + json.load(sys.stdin)['subdomain'] + '.netlify.com')")" >> $GITHUB_ENV
        if: always() && steps.testcafe.outcome == 'failure'
      - name: Create/update PR comment for Acceptance Test results for V${{ matrix.version }}
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          header: testcafe-results-${{matrix.service}}
          append: true
          message: |
            ## TestCafe result is __${{ steps.testcafe.outcome }}__ for ${{ matrix.description }}! ${{steps.testcafe.outcome == 'success' && ':laughing::tada::tada::tada:' || ':crying_cat_face::anger::boom::boom:' }}
        if: always() && (steps.testcafe.outcome == 'success' || steps.testcafe.outcome == 'failure')
      - name: Create/update PR comment for Acceptance Test results for V${{ matrix.version }}
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          header: testcafe-results-${{matrix.service}}
          append: true
          message: |
            **Check the report on: [${{ env.REPORT_URL }}](${{ env.REPORT_URL }})**
        if: always() && steps.testcafe.outcome == 'failure'
      - name: Upload screenshots and videos of failed tests to artifact for V${{ matrix.version }}
        uses: actions/upload-artifact@v2
        with:
          name: report
          path: report/
        if: always() && steps.testcafe.outcome == 'failure'
